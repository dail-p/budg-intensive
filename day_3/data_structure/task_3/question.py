"""
Посмотрите сколько памяти занимают следующие объекты.
Сколько будет занимать памяти список с двумя элементами после добавления в него
еще одно элемента с помощью append? Почему?
"""

first_tuple = (1, 2)
second_tuple = (1, 2, 3)
first_list = [1, 2]
second_list = [1, 2, 3]

print(first_tuple.__sizeof__())
print(second_tuple.__sizeof__())
print(first_list.__sizeof__())
print(second_list.__sizeof__())

first_list.append(3)
print(first_list.__sizeof__())
first_list.append({'a': 2, 's': 3})
print(first_list.__sizeof__())

"""
Изначался список с двумя элементами занимает 40 + 8*2 байта. Метод 
аppend при выполнении вызывает метод, который выделяет память до 8 мест (список при этом из 3 элементов остается), 
поэтому после добавления элемента он занимеет 40 + 8*8 байта. Память под новые 8 мест не будет выделена, пока предыдущие
не заполнятся. При этом список содержит 8-байтовые указатели(в 64-битных версиях Python) на 
фактический объект int(или на словарь, это не важно).
"""
